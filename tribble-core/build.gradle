/*
 *    Copyright 2018 Satellite Applications Catapult Limited.
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

group rootProject.group
version rootProject.version

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:${rootProject.bintrayVersion}"
        classpath "com.github.jengelman.gradle.plugins:shadow:${rootProject.shadowVersion}"
    }
}

apply plugin : 'java'
apply plugin : 'scala'
apply plugin : 'maven'
apply plugin : 'maven-publish'
apply plugin : 'com.jfrog.bintray'
apply plugin : 'com.github.johnrengelman.shadow'

sourceCompatibility = 1.8
repositories {
    jcenter()
}


dependencies {
    compile "org.scala-lang:scala-library:${rootProject.scalaVersion}"

    compile "commons-io:commons-io:${rootProject.commonsIOVersion}"
    compile "commons-lang:commons-lang:${rootProject.commonsLangVersion}"
    compile "org.jacoco:org.jacoco.core:${rootProject.jacocoVersion}"

    compile "org.ow2.asm:asm:${rootProject.asmVersion}"
    compile "org.ow2.asm:asm-analysis:${rootProject.asmVersion}"
    compile "org.ow2.asm:asm-commons:${rootProject.asmVersion}"
    compile "org.ow2.asm:asm-tree:${rootProject.asmVersion}"
    compile "org.ow2.asm:asm-util:${rootProject.asmVersion}"

    testCompile "junit:junit:${rootProject.junitVersion}"
    testCompile "org.mockito:mockito-core:${rootProject.mockitoVersion}"
}

shadowJar {
    classifier = 'shadow'
    // configurations = [project.configurations.compile]
    relocate 'org.objectweb.asm', 'tribbleshadow.org.objectweb.asm'
    relocate 'org.jacoco', 'tribbleshadow.org.jacoco'
    relocate 'org.apache.commons.io', 'tribbleshadow.org.apache.commons.io'
    relocate 'org.apache.commons.lang', 'tribbleshadow.org.apache.commons.lang'

    dependencies {
        include(dependency("org.ow2.asm:.*"))
        include(dependency("org.jacoco:.*"))
        include(dependency("commons-io:.*"))
        include(dependency("commons-lang:.*"))
    }
}


task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
    archives shadowJar
}

bintray {
    user = project.hasProperty('bintrayUser') ?: System.getenv('BINTRAY_USER') ?: System.getProperty("BINTRAY_USER")
    key = project.hasProperty('bintrayApiKey') ?: System.getenv('BINTRAY_KEY') ?: System.getProperty("BINTRAY_KEY")
    pkg {
        repo = 'Tribble'
        name = project.name
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/SatelliteApplicationsCatapult/tribble.git'
        publications = ['tribbleCorePub']
        version {
            name = project.version
            released  = new Date()
            vcsTag = 'v' + project.version
        }
    }
}

publishing {
    publications {
        tribbleCorePub(MavenPublication) {
            from components.java
            groupId project.group
            artifactId project.name
            version project.version

        }
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
        }
    }
}
